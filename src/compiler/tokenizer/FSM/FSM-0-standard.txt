// Tokenizes literals, keywords, comments, and standard operations

// configure callbacks
OUT  out
BACK back
IGNORE ignore
ERROR err

// redirects
OUT  0 null
BACK OUT null
IGNORE 0 null

// go to error if bad character
0 ERROR any
ERROR 0 null

// double-quoted string literal
0        QSTR1            "\""
QSTR1    QSTR1esc         "\\"
QSTR1esc QSTR1            any
QSTR1    QSTR1            any
QSTR1    STR              "\""

// single quoted string literal
0        QSTR2            "'"
QSTR2    QSTR2esc         "\\"
QSTR2esc QSTR2            any
QSTR2    QSTR2            any
QSTR2    STR              "'"

// string literal
STR OUT null

// integer prefixes
0    INT0 "0"
0    INT1 "123456789"
INT0 INTB "bB"
INT0 INTX "xX"

// integer suffixes
INT0 INT1 "123456789"
INT0 INT any
INTB INT1 "0123456789"
INTX INT1 "0123456789"
INT1 INT1 "0123456789"
INTB ERROR any
INTX ERROR any
INT1 ERROR any
INT1 INT  any

// integer literal
INT BACK null

// addition operator
0 OP_ADD  "+"
OP_ADD OUT null

// subtraction operator
0 OP_SUB "-"
OP_SUB OUT null

// multiplication operator
0 OP_MUL "*"
OP_MUL OUT null

// division operator and comments
0 SLASH0 "/"

// comment block
SLASH0 COMMENT_BLOCK0 "*"
COMMENT_BLOCK0 COMMENT_BLOCK1 "*"
COMMENT_BLOCK0 COMMENT_BLOCK0 any
COMMENT_BLOCK1 COMMENT_BLOCK  "/"
COMMENT_BLOCK1 COMMENT_BLOCK0 any
COMMENT_BLOCK COMMENT null

// comment inline
SLASH0 COMMENT_INLINE0 "/"
COMMENT_INLINE0 COMMENT_INLINE  "\n"
COMMENT_INLINE0 COMMENT_INLINE0 any
COMMENT_INLINE COMMENT null

// comment
COMMENT IGNORE null

// division
SLASH0 OP_DIV any
OP_DIV BACK null

// modulo
0 OP_MOD "%"
OP_MOD OUT null

// less than, less than or equal, shift left
0 LESS0 "<"

// less than or equal
LESS0 OP_LEQ "="
OP_LEQ OUT null

// shift left
LESS0 OP_SHL "<"
OP_SHL OUT null

// less than
LESS0 OP_LES any
OP_LES BACK null

// greater than, greater than or equal, shift right
0 GREAT0 ">"

// greater than or equal
GREAT0 OP_GEQ "="
OP_GEQ OUT null

// shift right
GREAT0 OP_SHR ">"
OP_SHR OUT null

// greater than
GREAT0 OP_GEQ any
OP_GEQ BACK null

// equality
0 OP_EQ "="
OP_EQ OUT null

// not operator, inequality
0 EXCLAMATION0 "!"

// inequality
EXCLAMATION0 OP_NEQ "="
OP_NEQ OUT null

// not operator
EXCLAMATION0 OP_NOT any
OP_NOT BACK null

// bitwise not (flip) operator
0 OP_FLP "~"
OP_FLP OUT null

// and operator
0 OP_AND "&"
OP_AND OUT null

// or operator
0 OP_OR "|"
OP_OR OUT null

// xor operator
0 OP_XOR "^"
OP_XOR OUT null

// at symbol
0 AT "@"
AT OUT null

// dollar symbol
0 DOLLAR "$"
DOLLAR OUT null

// colon symbol
0 COLON ":"
COLON OUT null

// semicolon symbol
0 SEMICOLON ";"
SEMICOLON OUT null

// backtick symbol 
0 BACKTICK "`"
BACKTICK OUT null

// period and two periods
0 PERIOD0 "."
PERIOD0 PPERIOD "."
PERIOD0 PERIOD any
PPERIOD OUT null
PERIOD BACK null

// comma symbol
0 COMMA ","
COMMA OUT null

// question mark symbol
0 QUESTION "?"
QUESTION OUT null

// hastag pound symbol
0 POUND "#"
POUND OUT null

// backslash symbol
0 BACKSLASH "\"
BACKSLASH OUT null

// underscore symbol
0 UNDERSCORE "_"
UNDERSCORE OUT null

// left parenthesis symbol
0 LPAREN "("
LPAREN OUT null

// right parenthesis symbol
0 RPAREN ")"
RPAREN OUT null

// left brace symbol
0 LBRACE "{"
LBRACE OUT null

// right brace symbol
0 RBRACE ")"
RBRACE OUT null

// left bracket symbol
0 LBRACKET0 "["
LBRACKET0 LLBRACKET "["
LBRACKET0 LBRACKET any
LBRACKET BACK null
LLBRACKET OUT null

// right bracket symbol
0 RBRACKET0 "]"
RBRACKET0 RRBRACKET "]"
RBRACKET0 RBRACKET any
RBRACKET BACK null
RRBRACKET OUT null

// arbitrary whitespace
0 WHITESPACE " \t\0"
WHITESPACE IGNORE null

// keywords
0 KEYWORD0 "_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
KEYWORD0 KEYWORD0 "_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
KEYWORD0 KEYWORD0 "0123456789"
KEYWORD0 KEYWORD any
KEYWORD BACK null
