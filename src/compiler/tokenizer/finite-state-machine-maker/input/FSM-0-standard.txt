// Tokenizes literals, keywords, and standard operations

// go to error if bad character
0 ERROR any
ERROR 0 null
ERROR err

// double-quoted string literal
0        QSTR1            "\""
QSTR1    QSTR1esc         "\\"
QSTR1esc QSTR1            any
QSTR1    QSTR1            any
QSTR1    STR              "\""

// single quoted string literal
0        QSTR2            "'"
QSTR2    QSTR2esc         "\\"
QSTR2esc QSTR2            any
QSTR2    QSTR2            any
QSTR2    STR              "'"

// string literal
STR out
STR 0 null

// integer prefixes
0    INT0 "0"
0    INT1 "123456789"
INT0 INTB "bB"
INT0 INTX "xX"

// integer suffixes
INT0 INT1 "123456789"
INT0 INT any
INTB INT1 "0123456789"
INTX INT1 "0123456789"
INT1 INT1 "0123456789"
INTB ERROR any
INTX ERROR any
INT1 INT  any

// integer literal
INT back
INT out
INT 0 null

// addition operator
0 OP_ADD  "+"
OP_ADD out
OP_ADD 0 null

// subtraction operator
0 OP_SUB "-"
OP_SUB out
OP_SUB 0 null

// multiplication operator
0 OP_MUL "*"
OP_MUL out
OP_MUL 0 null

// division operator and comments
0 OP_DIV "/"
OP_DIV out
OP_DIV 0 null

// division
SLASH0 OP_DIV any
OP_DIV back
OP_DIV out
OP_DIV 0 null

// modulo
0 OP_MOD "%"
OP_MOD out
OP_MOD 0 null

// less than, less than or equal, shift left
0 LESS0 "<"

// less than or equal
LESS0 OP_LEQ "="
OP_LEQ out
OP_LEQ 0 null

// shift left
LESS0 OP_SHL "<"
OP_SHL out
OP_SHL 0 null

// less than
LESS0 OP_LES any
OP_LES out
OP_LES 0 null

// greater than, greater than or equal, shift right
0 GREAT0 ">"

// greater than or equal
GREAT0 OP_GEQ "="
OP_GEQ out
OP_GEQ 0 null

// shift right
GREAT0 OP_SHR ">"
OP_SHR out
OP_SHR 0 null

// greater than
GREAT0 OP_GRE any
OP_GRE back
OP_GRE out
OP_GRE 0 null

// equality
0 OP_EQ "="
OP_EQ out
OP_EQ 0 null

// not operator, inequality
0 EXCLAMATION0 "!"

// inequality
EXCLAMATION0 OP_NEQ "="
OP_NEQ out
OP_NEQ 0 null

// not operator
EXCLAMATION0 OP_NOT any
OP_NOT back
OP_NOT out
OP_NOT 0 null

// bitwise not (flip) operator
0 OP_FLP "~"
OP_FLP out
OP_FLP 0 null

// and operator
0 OP_AND "&"
OP_AND out
OP_AND 0 null

// or operator
0 OP_OR "|"
OP_OR out
OP_OR 0 null

// xor operator
0 OP_XOR "^"
OP_XOR out
OP_XOR 0 null

// at symbol
0 AT "@"
AT out
AT 0 null

// dollar symbol
0 DOLLAR "$"
DOLLAR out
DOLLAR 0 null

// colon symbol
0 COLON ":"
COLON out
COLON 0 null

// semicolon symbol
0 SEMICOLON ";"
SEMICOLON out
SEMICOLON 0 null

// backtick symbol 
0 BACKTICK "`"
BACKTICK out
BACKTICK 0 null

// period and two periods
0 PERIOD0 "."
PERIOD0 PPERIOD "."
PERIOD0 PERIOD any
PPERIOD out
PPERIOD 0 null
PERIOD back
PERIOD out
PERIOD 0 null

// comma symbol
0 COMMA ","
COMMA out
COMMA 0 null

// question mark symbol
0 QUESTION "?"
QUESTION out
QUESTION 0 null

// hastag pound symbol
0 POUND "#"
POUND out
POUND 0 null

// backslash symbol
0 BACKSLASH "\\"
BACKSLASH out
BACKSLASH 0 null

// underscore symbol
0 UNDERSCORE "_"
UNDERSCORE out
UNDERSCORE 0 null

// left parenthesis symbol
0 LPAREN "("
LPAREN out
LPAREN 0 null

// right parenthesis symbol
0 RPAREN ")"
RPAREN out
RPAREN 0 null

// left brace symbol
0 LBRACE "{"
LBRACE out
LBRACE 0 null

// right brace symbol
0 RBRACE ")"
RBRACE out
RBRACE 0 null

// left bracket symbol
0 LBRACKET0 "["
LBRACKET0 LLBRACKET "["
LBRACKET0 LBRACKET any
LBRACKET back
LBRACKET out
LBRACKET 0 null
LLBRACKET out
LLBRACKET 0 null

// right bracket symbol
0 RBRACKET0 "]"
RBRACKET0 RRBRACKET "]"
RBRACKET0 RBRACKET any
RBRACKET back
RBRACKET out
RBRACKET 0 null
RRBRACKET out
RRBRACKET 0 null

// arbitrary whitespace
0 WHITESPACE " "
WHITESPACE out
WHITESPACE 0 null

// keywords
0 KEYWORD0 "_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
KEYWORD0 KEYWORD0 "_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
KEYWORD0 KEYWORD0 "0123456789"
KEYWORD0 KEYWORD any
KEYWORD back
KEYWORD out
KEYWORD 0 null
